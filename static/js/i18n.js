
// –°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å–∞–π—Ç–∞
class I18n {
    constructor() {
        this.currentLanguage = this.detectLanguage();
        this.translations = {
            'ru': {
                // Navigation
                'leaders': '–õ–∏–¥–µ—Ä—ã',
                'statistics': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                'quests': '–ö–≤–µ—Å—Ç—ã',
                'achievements': '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'clans': '–ö–ª–∞–Ω—ã',
                'tournaments': '–¢—É—Ä–Ω–∏—Ä—ã',
                'shop': '–ú–∞–≥–∞–∑–∏–Ω',
                'profile': '–ü—Ä–æ—Ñ–∏–ª—å',
                'login': '–í—Ö–æ–¥',
                'logout': '–í—ã–π—Ç–∏',
                
                // Stats
                'level': '–£—Ä–æ–≤–µ–Ω—å',
                'kills': '–ö–∏–ª–ª—ã',
                'deaths': '–°–º–µ—Ä—Ç–∏',
                'wins': '–ü–æ–±–µ–¥—ã',
                'games': '–ò–≥—Ä—ã',
                'kd_ratio': 'K/D',
                'win_rate': '% –ø–æ–±–µ–¥',
                'beds_broken': '–ö—Ä–æ–≤–∞—Ç–∏',
                'final_kills': '–§–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∏–ª–ª—ã',
                'coins': '–ö–æ–π–Ω—ã',
                'reputation': '–†–µ–ø—É—Ç–∞—Ü–∏—è',
                
                // UI
                'search': '–ü–æ–∏—Å–∫...',
                'save': '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
                'cancel': '–û—Ç–º–µ–Ω–∞',
                'edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
                'delete': '–£–¥–∞–ª–∏—Ç—å',
                'back': '–ù–∞–∑–∞–¥',
                'next': '–î–∞–ª–µ–µ',
                'loading': '–ó–∞–≥—Ä—É–∑–∫–∞...',
                'error': '–û—à–∏–±–∫–∞',
                'success': '–£—Å–ø–µ—à–Ω–æ',
                
                // Profile
                'my_profile': '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
                'edit_profile': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å',
                'social_networks': '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏',
                'about_player': '–û –∏–≥—Ä–æ–∫–µ',
                'gaming_preferences': '–ò–≥—Ä–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è',
                'personal_info': '–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                
                // Time
                'created_at': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
                'last_updated': '–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                'birthday': '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è'
            },
            'ua': {
                // Navigation
                'leaders': '–õ—ñ–¥–µ—Ä–∏',
                'statistics': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                'quests': '–ö–≤–µ—Å—Ç–∏',
                'achievements': '–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è',
                'clans': '–ö–ª–∞–Ω–∏',
                'tournaments': '–¢—É—Ä–Ω—ñ—Ä–∏',
                'shop': '–ú–∞–≥–∞–∑–∏–Ω',
                'profile': '–ü—Ä–æ—Ñ—ñ–ª—å',
                'login': '–í—Ö—ñ–¥',
                'logout': '–í–∏–π—Ç–∏',
                
                // Stats
                'level': '–†—ñ–≤–µ–Ω—å',
                'kills': '–í–±–∏–≤—Å—Ç–≤–∞',
                'deaths': '–°–º–µ—Ä—Ç—ñ',
                'wins': '–ü–µ—Ä–µ–º–æ–≥–∏',
                'games': '–Ü–≥—Ä–∏',
                'kd_ratio': 'K/D',
                'win_rate': '% –ø–µ—Ä–µ–º–æ–≥',
                'beds_broken': '–õ—ñ–∂–∫–∞',
                'final_kills': '–§—ñ–Ω–∞–ª—å–Ω—ñ –≤–±–∏–≤—Å—Ç–≤–∞',
                'coins': '–ú–æ–Ω–µ—Ç–∏',
                'reputation': '–†–µ–ø—É—Ç–∞—Ü—ñ—è',
                
                // UI
                'search': '–ü–æ—à—É–∫...',
                'save': '–ó–±–µ—Ä–µ–≥—Ç–∏',
                'cancel': '–°–∫–∞—Å—É–≤–∞—Ç–∏',
                'edit': '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏',
                'delete': '–í–∏–¥–∞–ª–∏—Ç–∏',
                'back': '–ù–∞–∑–∞–¥',
                'next': '–î–∞–ª—ñ',
                'loading': '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...',
                'error': '–ü–æ–º–∏–ª–∫–∞',
                'success': '–£—Å–ø—ñ—à–Ω–æ',
                
                // Profile
                'my_profile': '–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å',
                'edit_profile': '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å',
                'social_networks': '–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ',
                'about_player': '–ü—Ä–æ –≥—Ä–∞–≤—Ü—è',
                'gaming_preferences': '–Ü–≥—Ä–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è',
                'personal_info': '–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
                
                // Time
                'created_at': '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è',
                'last_updated': '–û—Å—Ç–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å',
                'birthday': '–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è'
            },
            'en': {
                // Navigation
                'leaders': 'Leaders',
                'statistics': 'Statistics',
                'quests': 'Quests',
                'achievements': 'Achievements',
                'clans': 'Clans',
                'tournaments': 'Tournaments',
                'shop': 'Shop',
                'profile': 'Profile',
                'login': 'Login',
                'logout': 'Logout',
                
                // Stats
                'level': 'Level',
                'kills': 'Kills',
                'deaths': 'Deaths',
                'wins': 'Wins',
                'games': 'Games',
                'kd_ratio': 'K/D',
                'win_rate': 'Win Rate',
                'beds_broken': 'Beds',
                'final_kills': 'Final Kills',
                'coins': 'Coins',
                'reputation': 'Reputation',
                
                // UI
                'search': 'Search...',
                'save': 'Save',
                'cancel': 'Cancel',
                'edit': 'Edit',
                'delete': 'Delete',
                'back': 'Back',
                'next': 'Next',
                'loading': 'Loading...',
                'error': 'Error',
                'success': 'Success',
                
                // Profile
                'my_profile': 'My Profile',
                'edit_profile': 'Edit Profile',
                'social_networks': 'Social Networks',
                'about_player': 'About Player',
                'gaming_preferences': 'Gaming Preferences',
                'personal_info': 'Personal Info',
                
                // Time
                'created_at': 'Registration',
                'last_updated': 'Last Activity',
                'birthday': 'Birthday'
            }
        };
        
        this.init();
    }

    detectLanguage() {
        // Check localStorage first
        const saved = localStorage.getItem('selectedLanguage');
        if (saved && this.translations[saved]) {
            return saved;
        }

        // Auto-detect from browser
        const browserLang = navigator.language.toLowerCase();
        if (browserLang.startsWith('uk') || browserLang.startsWith('ua')) {
            return 'ua';
        } else if (browserLang.startsWith('en')) {
            return 'en';
        } else {
            return 'ru'; // Default
        }
    }

    init() {
        this.createLanguageSwitcher();
        this.applyTranslations();
    }

    createLanguageSwitcher() {
        const userPanel = document.querySelector('.user-panel');
        if (!userPanel) return;

        const languageDropdown = document.createElement('div');
        languageDropdown.className = 'dropdown';
        languageDropdown.innerHTML = `
            <a class="user-panel-item dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" title="–Ø–∑—ã–∫" aria-label="–í—ã–±–æ—Ä —è–∑—ã–∫–∞">
                <i class="fas fa-globe me-1"></i><span class="current-lang">${this.getCurrentLanguageFlag()}</span>
            </a>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item language-option" href="#" data-lang="ru">
                    <i class="me-2">üá∑üá∫</i>–†—É—Å—Å–∫–∏–π
                </a></li>
                <li><a class="dropdown-item language-option" href="#" data-lang="ua">
                    <i class="me-2">üá∫üá¶</i>–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞
                </a></li>
                <li><a class="dropdown-item language-option" href="#" data-lang="en">
                    <i class="me-2">üá∫üá∏</i>English
                </a></li>
            </ul>
        `;

        // Insert before the first child of user panel
        userPanel.insertBefore(languageDropdown, userPanel.firstChild);

        // Add event listeners
        languageDropdown.querySelectorAll('.language-option').forEach(option => {
            option.addEventListener('click', (e) => {
                e.preventDefault();
                this.changeLanguage(e.target.closest('[data-lang]').dataset.lang);
            });
        });
    }

    getCurrentLanguageFlag() {
        const flags = { 'ru': 'üá∑üá∫', 'ua': 'üá∫üá¶', 'en': 'üá∫üá∏' };
        return flags[this.currentLanguage] || 'üá∑üá∫';
    }

    changeLanguage(lang) {
        if (!this.translations[lang]) return;

        this.currentLanguage = lang;
        localStorage.setItem('selectedLanguage', lang);
        
        // Update flag in UI
        const flagElement = document.querySelector('.current-lang');
        if (flagElement) {
            flagElement.textContent = this.getCurrentLanguageFlag();
        }

        this.applyTranslations();

        // Announce language change to screen readers
        if (window.announceToScreenReader) {
            const langNames = { 'ru': '—Ä—É—Å—Å–∫–∏–π', 'ua': '—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞', 'en': 'English' };
            window.announceToScreenReader(`–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${langNames[lang]}`);
        }
    }

    translate(key, fallback = null) {
        const translation = this.translations[this.currentLanguage]?.[key];
        return translation || fallback || key;
    }

    applyTranslations() {
        // Translate elements with data-i18n attribute
        document.querySelectorAll('[data-i18n]').forEach(element => {
            const key = element.dataset.i18n;
            const translation = this.translate(key);
            
            if (element.tagName === 'INPUT' && (element.type === 'text' || element.type === 'search')) {
                element.placeholder = translation;
            } else if (element.hasAttribute('title')) {
                element.title = translation;
            } else if (element.hasAttribute('aria-label')) {
                element.setAttribute('aria-label', translation);
            } else {
                element.textContent = translation;
            }
        });

        // Update document language
        document.documentElement.lang = this.currentLanguage === 'ua' ? 'uk' : this.currentLanguage;
    }
}

// Initialize i18n when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    if (typeof window.bedwarsI18n === 'undefined') {
        window.bedwarsI18n = new I18n();
    }
});

// Export for use in other scripts
window.I18n = I18n;
